@using PagedList
@using PagedList.Mvc
@using NoteMarketPlace.Models

@model IPagedList<NoteMarketPlace.Models.NoteDetail>

<section id="dashboard-progress">
    <div class="container">
        <div class="row">
            <div class="col-12 col-sm-12 col-md-4 col-lg-6">
                <h3>In Progress Notes</h3>
            </div>
            <div class="col-12 col-sm-12 col-md-8 col-lg-6">
                <form>
                    <div class="row justify-content-end">
                        <div class="wrapper">
                            <img src="~/content/img/Dashboard/search.jpg" class="searchimage doup">
                            <input type="text" name="search" value="@Request.QueryString["search"]" class="form-control search-bar InputEmail1" placeholder="Search">
                            <input name="sortBy" value="@Request.QueryString["sortBy"]" hidden />
                            <input name="search2" value="@Request.QueryString["search2"]" hidden />
                            <input name="sortBy2" value="@Request.QueryString["sortBy2"]" hidden />
                        </div>
                        <div class="btn-merge">
                            <button type="submit" class="btn text-uppercase text-center" id="mybtn"><b>Search</b></button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="grid-table table-responsive-xl">
                    <table class="table">
                        <thead>
                            <tr>
                                <th scope="col" class="align-middle" onclick="@("window.location.href = '"+ @Url.Action("Dashboard","Home",new { sortBy = "date", search = Request.QueryString["search"], sortBy2 = Request.QueryString["sortBy2"], search2 = Request.QueryString["search2"] } )+"'")">ADDED DATE</th>
                                <th scope="col" class="align-middle" onclick="@("window.location.href = '"+ @Url.Action("Dashboard","Home",new { sortBy = "title", search = Request.QueryString["search"], sortBy2 = Request.QueryString["sortBy2"], search2 = Request.QueryString["search2"] } )+"'")">TITLE</th>
                                <th scope="col" class="align-middle" onclick="@("window.location.href = '"+ @Url.Action("Dashboard","Home", new { sortBy = "category", search = Request.QueryString["search"], sortBy2 = Request.QueryString["sortBy2"], search2 = Request.QueryString["search2"] } )+"'")">CATEGORY</th>
                                <th scope="col" class="align-middle" onclick="@("window.location.href = '"+ @Url.Action("Dashboard","Home", new { sortBy = "status", search = Request.QueryString["search"], sortBy2 = Request.QueryString["sortBy2"], search2 = Request.QueryString["search2"] } )+"'")">STATUS</th>
                                <th scope="col" class="align-middle">ACTIONS</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.Count() == 0)
                            {
                                <tr><td class="align-middle" colspan="11">No record found!</td></tr>
                            }
                            @foreach (var notes in Model)
                            {
                                <tr>
                                    <td class="align-middle">@notes.CreatedDate.Value.ToString("dd/MM/yyyy")</td>
                                    <td class="align-middle">@notes.Title</td>
                                    <td class="align-middle">@notes.NoteCategory.Name</td>
                                    <td class="align-middle">@notes.NoteStatu.Name</td>
                                    <td class="align-middle">
                                        @if (notes.NoteStatus == 1)
                                        {
                                        <div class="row">
                                            <div class="col-6 col-sm-6 col-md-4 col-lg-3">
                                                <a href="@Url.Action("AddNote","Home",new { noteId = notes.NoteID.ToString() })">  <img src="/content/img/Dashboard/edit.png"  alt="Edit"> </a>
                                            </div>
                                            <div class="col-6 col-sm-6 col-md-4 col-lg-3">
                                                <a href="@Url.Action("Dashboard","Home",new { noteId = notes.NoteID.ToString() })"><img src="/content/img/Dashboard/delete.png"  alt="Delete"> </a>
                                            </div>
                                        </div>
                                        }
                                        else
                                        {
                                            <div class="row text-center">
                                                <div class="col-11 col-sm-11 col-md-9 col-lg-7">
                                                    <a href="@Url.Action("NoteDetail","Home",new { noteId = notes.NoteID.ToString() })"> <img src="/content/img/Dashboard/eye.png" alt="Edit" class="img-fluid"  /> </a>
                                                </div>
                                            </div>
                                        }
                                    </td>
                                </tr>

                            }
                        </tbody>
                    </table>

                </div>
            </div>


        </div>
    </div>
</section>

<!-- Pagination -->
@Html.PagedListPager(Model, page => Url.Action("Dashboard", new { page, sortBy = Request.QueryString["sortBy"], search = Request.QueryString["search"] }), new PagedListRenderOptions()
{
       Display = PagedListDisplayMode.IfNeeded,
       ContainerDivClasses = null,
       LiElementClasses = new string[] { "page-item page-link" },
       UlElementClasses = new string[] { "pagination justify-content-center" },
       LinkToNextPageFormat = "<i class='fa fa-angle-right'></i>",
       LinkToPreviousPageFormat = "<i class='fa fa-angle-left'></i>",
       MaximumPageNumbersToDisplay = 5,
       DisplayEllipsesWhenNotShowingAllPageNumbers = false,
       DisplayLinkToFirstPage = PagedListDisplayMode.Never,
       DisplayLinkToLastPage = PagedListDisplayMode.Never
})
