@using PagedList
@using PagedList.Mvc
@using NoteMarketPlace.Models
@model IPagedList<NoteMarketPlace.Models.NoteDetail>

@{
    ViewBag.Title = "My Rejected Note";
    Layout = "~/Views/Shared/Register.cshtml";
}

<!-- My Rejected Notes -->
<div class="outerbox">
    <section id="dashboard-publish" class="mydownload-margin">
        <div class="container">
            <div class="row top-table">
                <div class="col-12 col-sm-12 col-md-12 col-lg-6">
                    <h3>My Rejected Notes</h3>
                </div>
                <div class="col-12 col-sm-12 col-md-12 col-lg-6">
                    <form>
                        <div class="row justify-content-end">
                            <div class="wrapper">
                                <img src="/Content/img/Dashboard/search.jpg" class="searchimage doup">
                                <input type="text" name="search" value="@Request.QueryString["search"]" class="form-control search-bar InputEmail1" placeholder="Search">
                                <input name="sortBy" value="@Request.QueryString["sortBy"]" hidden />
                                <input type="submit" hidden />
                            </div>
                            <div class="btn-merge">
                                <button type="submit" class="btn text-uppercase text-center" id="mybtn"><b>Search</b></button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="grid-table table-responsive-xl">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th scope="col" class="align-middle text-center">SR NO.</th>
                                    <th scope="col" class="align-middle"></th>
                                    <th scope="col" class="align-middle" style="cursor:pointer" onclick="@("window.location.href = '" + Url.Action("RejectedNote","Home",new {sortBy = "title", search = Request.QueryString["search"]})+"'")">NOTE TITLE</th>
                                    <th scope="col" class="align-middle" style="cursor:pointer" onclick="@("window.location.href = '" + Url.Action("RejectedNote","Home",new {sortBy = "category", search = Request.QueryString["search"]})+"'")">CATEGORY</th>
                                    <th scope="col" class="align-middle">REMARKS</th>
                                    <th scope="col" class="align-middle">CLONE</th>
                                    <th scope="col" class="align-middle"></th>
                                    <th scope="col" class="align-middle"></th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.Count == 0)
                                {
                                    <tr><td colspan="8">No record found!</td></tr>
                                }
                                @{
                                    int i = -1, a;
                                    if (Request.QueryString["page"] == null || Request.QueryString["page"].AsInt() == 1)
                                    {
                                        a = 1;
                                    }
                                    else
                                    {
                                        a = (Request.QueryString["page"].AsInt() - 1) * 5 + 1;
                                    }
                                    foreach (var note in Model)
                                    {
                                        i++;
                                        <tr>
                                            <td class="align-middle text-center">@(a + i)</td>
                                            <td class="align-middle getpurple">@note.Title</td>
                                            <td class="align-middle">@note.Category</td>
                                            <td class="align-middle">@note.Remark</td>
                                            <td class="align-middle getpurple">clone</td>
                                            <td class="align-middle">
                                                <div class="dropdown">
                                                    <a type="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                        <i class="fa fa-ellipsis-v dowhite"></i>
                                                    </a>
                                                    <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuLink">
                                                        <a class="dropdown-item" href="#">Download Notes</a>

                                                    </div>
                                                </div>
                                            </td>
                                            <td></td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>


            </div>
        </div>
    </section>
</div>
<!-- My Rejected Notes Ends-->

@Html.PagedListPager(Model, page => Url.Action("RejectedNote", "Home", new { page, search = Request.QueryString["search"], sortBy = Request.QueryString["sortBy"] }), new PagedListRenderOptions()
{
     Display = PagedListDisplayMode.IfNeeded,
     ContainerDivClasses = null,
     LiElementClasses = new string[] { "page-item" },
     UlElementClasses = new string[] { "pagination justify-content-center" },
     LinkToNextPageFormat = "<i class='fa fa-chevron-right'></i>",
     LinkToPreviousPageFormat = "<i class='fa fa-chevron-left'></i>",
     MaximumPageNumbersToDisplay = 5,
     DisplayEllipsesWhenNotShowingAllPageNumbers = false,
     DisplayLinkToFirstPage = PagedListDisplayMode.Never,
     DisplayLinkToLastPage = PagedListDisplayMode.Never
})