@using PagedList
@using PagedList.Mvc
@using NoteMarketPlace.Models

@model IPagedList<NoteMarketPlace.Models.NoteDetail>

@{
    ViewBag.Title = "Published Note";
    Layout = "~/Views/Shared/Admin.cshtml";
}
@{
    NoteMarketPlaceEntities db = new NoteMarketPlaceEntities();
}

<!-- Published Notes -->
<section id="dashboard-publish" class="mydownload-margin">
    <div class="container">
        <div class="row">
            <div class="col-12 col-sm-12 col-md-12 col-lg-12">
                <h3>Published Notes</h3>
            </div>
        </div>
        <form>
            <div class="row top-table">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-6">
                    <div class="div-seller text-center">
                        <p class="seller-text text-left"><span>Seller</span></p>
                        <select name="seller" class="form-control inputselect seller-dd" onchange="submit()">
                            <option value="">Select Seller</option>
                            @foreach (var item in ViewBag.sellerName)
                            {
                                if (Request.QueryString["seller"] == item)
                                {
                                    <option selected value="@item">@item</option>
                                    continue;
                                }
                                else
                                {
                                    <option value="@item">@item</option>
                                }
                            }
                        </select>
                    </div>
                </div>
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-6">
                    <div class="row justify-content-end  last-margin">
                        <div class="wrapper seller-mb">
                            <img src="/Content/Admin/img/Dashboard/search.jpg" class="searchimage doup">
                            <input type="text" name="search" value="@Request.QueryString["search"]" class="form-control search-bar InputEmail1" placeholder="Search">
                        </div>
                        <div class="btn-merge seller-mb">
                            <button type="submit" class="btn text-uppercase text-center" id="mybtn"><b>Search</b></button>
                        </div>
                    </div>
                </div>
            </div>
        </form>
        <div class="row">
            <div class="col-md-12">
                <div class="grid-table table-responsive-xl">
                    <table class="table">
                        <thead>
                            <tr>
                                <th scope="col" class="align-middle text-center" style="cursor:text">SR NO.</th>
                                <th scope="col" class="align-middle" onclick="@("window.location.href='" + @Url.Action("PublisheNote", "Admin", new { sortBy = "title", search = Request.QueryString["search"], page = Request.QueryString["page"] }) + "'");">NOTE TITLE</th>
                                <th scope="col" class="align-middle" onclick="@("window.location.href='" + @Url.Action("PublisheNote", "Admin", new { sortBy = "category", search = Request.QueryString["search"], page = Request.QueryString["page"] }) + "'");">CATEGORY</th>
                                <th scope="col" class="align-middle" style="cursor:text">SELL TYPE</th>
                                <th scope="col" class="align-middle" onclick="@("window.location.href='" + @Url.Action("PublisheNote", "Admin", new { sortBy = "price", search = Request.QueryString["search"], page = Request.QueryString["page"] }) + "'");">PRICE</th>
                                <th scope="col" class="align-middle" onclick="@("window.location.href='" + @Url.Action("PublisheNote", "Admin", new { sortBy = "seller", search = Request.QueryString["search"], page = Request.QueryString["page"] }) + "'");">SELLER</th>
                                <th scope="col" class="align-middle"></th>
                                <th scope="col" class="align-middle" onclick="@("window.location.href='" + @Url.Action("PublisheNote", "Admin", new { sortBy = "date", search = Request.QueryString["search"], page = Request.QueryString["page"] }) + "'");">PUBLISHED DATE</th>
                                <th scope="col" class="align-middle" onclick="@("window.location.href='" + @Url.Action("PublisheNote", "Admin", new { sortBy = "approvedBy", search = Request.QueryString["search"], page = Request.QueryString["page"] }) + "'");">APPROVED BY</th>
                                <th scope="col" class="align-middle" style="cursor:text">NUMBER OF <br />DOWNLOADS</th>
                                <th scope="col" class="align-middle" style="cursor:text"></th>
                                <th scope="col" class="align-middle" style="cursor:text"></th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.Count == 0)
                            {
                                <tr><td colspan="12" class="align-middle">No Record Found!</td></tr>
                            }
                            @{
                                int i = -1, a;
                                if (Request.QueryString["page"] == null || Request.QueryString["page"].AsInt() == 1)
                                {
                                    a = 1;
                                }
                                else
                                {
                                    a = (Request.QueryString["page"].AsInt() - 1) * 5 + 1;
                                }
                                foreach (var item in Model)
                                {
                                    i++;
                                    <tr>
                                        <td class="align-middle text-center">@(a + i)</td>
                                        <td class="align-middle getpurple">@item.Title</td>
                                        <td class="align-middle">@item.NoteCategory.Name</td>
                                        <td class="align-middle">@(item.SellPrice == 0? "Free": "Paid")</td>
                                        <td class="align-middle">$@item.SellPrice</td>
                                        <td class="align-middle">@item.Publisher</td>
                                        <td class="align-middle"><a href="@Url.Action("MemberDetail","Admin",new { UserId = item.UserID.ToString() } )"><img src="/Content/img/Dashboard/eye.png"></a></td>                                        <td class="align-middle">@item.PublishedDate.Value.ToString("dd-MM-yyyy,hh:mm")</td>
                                        <td class="align-middle">@item.Modifier</td>
                                        <td class="align-middle getpurple text-center">@item.NumberOfDownload</td>
                                        <td class="align-middle">
                                            <div class="dropdown" style="cursor:pointer">
                                                <a id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                    <i class="fa fa-ellipsis-v dowhite"></i>
                                                </a>
                                                <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuLink">
                                                    @{ NoteAttachement notefile = db.NoteAttachements.SingleOrDefault(m => m.NoteID == item.NoteID); }
                                                    <a class="dropdown-item" href="@Url.Action("DownloadFile", "Home", new { filename = notefile.FileName })">Download Notes</a>
                                                    <a class="dropdown-item" href="@Url.Action("NoteDetail", "Admin", new { noteId = item.NoteID.ToString() })">View More Details</a>
                                                    <a class="dropdown-item" data-toggle="modal" data-target="#exampleModal" onclick="unpublish(@item.NoteID,'@item.Title')">Unpublish</a>
                                                </div>
                                            </div>
                                        </td>
                                        <td></td>
                                    </tr>
                                }
                            }

                        </tbody>
                    </table>
                </div>
            </div>


        </div>
    </div>
</section>
<!-- Published Notes -->
<script>

    function unpublish(id, title) {
        document.getElementById("unpublishNoteID").setAttribute("value", id);
        var x = document.getElementsByClassName("noteTitle");
        x[0].innerHTML = title;
    }
</script>

<!-- Modal -->
<div class="modal fade modal-download" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">

        <div class="row">
            <div class="col-xl-12">
                <div class="modal-content">
                    <div class="modal-header">

                        <a class="close" data-dismiss="modal" aria-label="Close">
                            <img src="~/content/img/Notes Details/close.png">
                        </a>
                    </div>
                    <div class="model-data">

                        <div class="model-head text-left">
                            <h2 class="noteTitle">Note Title</h2>
                        </div>
                        <div class="middel-content text-left">

                            <form method="post">

                                <input name="NoteID" id="unpublishNoteID" hidden />

                                <div class="row">
                                    <div class="col-12">
                                        <div class="form-group">
                                            <div class="textarea-input">
                                                <label class="mylabel" for="InputEmail1">Remark *</label>
                                                @Html.TextArea("Remark", new { @placeholder = "Remark...", @class = "form-control InputEmail1" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-12">
                                        <button type="submit" class="btn text-center" id="mybtn">Unpublish</button>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>

                </div>
            </div>
        </div>

    </div>
</div>

@Html.PagedListPager(Model, page => Url.Action("PublishedNote", new { page, month = Request.QueryString["month"], sortBy = Request.QueryString["sortBy"], search = Request.QueryString["search"] }), new PagedListRenderOptions()
{
       Display = PagedListDisplayMode.IfNeeded,
       ContainerDivClasses = null,
       LiElementClasses = new string[] { "page-item" },
       UlElementClasses = new string[] { "pagination justify-content-center" },
       LinkToNextPageFormat = "<i class='fa fa-chevron-right'></i>",
       LinkToPreviousPageFormat = "<i class='fa fa-chevron-left'></i>",
       MaximumPageNumbersToDisplay = 5,
       DisplayEllipsesWhenNotShowingAllPageNumbers = false,
       DisplayLinkToFirstPage = PagedListDisplayMode.Never,
       DisplayLinkToLastPage = PagedListDisplayMode.Never
})
