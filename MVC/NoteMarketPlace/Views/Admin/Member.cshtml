@using PagedList
@using PagedList.Mvc
@using NoteMarketPlace.Models

@model IPagedList<NoteMarketPlace.Models.Members>

@{
    ViewBag.Title = "Member";
    Layout = "~/Views/Shared/Admin.cshtml";
}

@{
    NoteMarketPlaceEntities db = new NoteMarketPlaceEntities();
}

<div class="outerbox">
    <section id="dashboard-publish" class="mydownload-margin">
        <div class="container">
            <div class="row top-table">
                <div class="col-12 col-sm-12 col-md-12 col-lg-6">
                    <h3>Members</h3>
                </div>
                <div class="col-12 col-sm-12 col-md-12 col-lg-6">
                    <form>
                        <div class="row justify-content-end extra-margin1">
                            <div class="wrapper">
                                <img src="/Content/Admin/img/Dashboard/search.jpg" class="searchimage doup">
                                <input type="text" name="search" value="@Request.QueryString["search"]" class="form-control search-bar InputEmail1" placeholder="Search">
                                <input name="sortBy" value="@Request.QueryString["sortBy"]" hidden />
                            </div>
                            <div class="btn-merge">
                                <button type="submit" class="btn text-uppercase text-center" id="mybtn"><b>Search</b></button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="grid-table table-responsive-xl">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th scope="col" class="align-middle text-center">SR NO.</th>
                                    <th scope="col" class="align-middle" onclick="@("window.location.href='" + @Url.Action("Member", "Admin", new {sortBy = "firstName", search = Request.QueryString["search"], page = Request.QueryString["page"] }) + "'");">FIRST NAME</th>
                                    <th scope="col" class="align-middle" onclick="@("window.location.href='" + @Url.Action("Member", "Admin", new {sortBy = "lastName", search = Request.QueryString["search"], page = Request.QueryString["page"] }) + "'");">LAST NAME</th>
                                    <th scope="col" class="align-middle" onclick="@("window.location.href='" + @Url.Action("Member", "Admin", new {sortBy = "email", search = Request.QueryString["search"], page = Request.QueryString["page"] }) + "'");">EMAIL</th>
                                    <th scope="col" class="align-middle" onclick="@("window.location.href='" + @Url.Action("Member", "Admin", new {sortBy = "date", search = Request.QueryString["search"], page = Request.QueryString["page"] }) + "'");">JOINING DATE</th>
                                    <th scope="col" class="align-middle text-center" onclick="@("window.location.href='" + @Url.Action("Member", "Admin", new {sortBy = "underReviewNote", search = Request.QueryString["search"], page = Request.QueryString["page"] }) + "'");">UNDER REVIEW<br />NOTES</th>
                                    <th scope="col" class="align-middle text-center" onclick="@("window.location.href='" + @Url.Action("Member", "Admin", new {sortBy = "publishedNote", search = Request.QueryString["search"], page = Request.QueryString["page"] }) + "'");">PUBLISHED<br />NOTES</th>
                                    <th scope="col" class="align-middle text-center" onclick="@("window.location.href='" + @Url.Action("Member", "Admin", new {sortBy = "downloadNote", search = Request.QueryString["search"], page = Request.QueryString["page"] }) + "'");">DOWNLOADED<br />NOTES</th>
                                    <th scope="col" class="align-middle text-center" onclick="@("window.location.href='" + @Url.Action("Member", "Admin", new {sortBy = "expenses", search = Request.QueryString["search"], page = Request.QueryString["page"] }) + "'");">TOTAL<br />EXPENSES</th>
                                    <th scope="col" class="align-middle text-center" onclick="@("window.location.href='" + @Url.Action("Member", "Admin", new {sortBy = "earning", search = Request.QueryString["search"], page = Request.QueryString["page"] }) + "'");">TOTAL<br />EARNINGS</th>
                                    <th scope="col" class="align-middle"></th>
                                    <th scope="col" class="align-middle"></th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.Count == 0)
                                {
                                    <tr><td colspan="12" class="align-middle">No Record Found!</td></tr>
                                }
                                @{
                                    int i = -1, a;
                                    if (Request.QueryString["page"] == null || Request.QueryString["page"].AsInt() == 1)
                                    {
                                        a = 1;
                                    }
                                    else
                                    {
                                        a = (Request.QueryString["page"].AsInt() - 1) * 5 + 1;
                                    }
                                    foreach (var user in Model)
                                    {
                                        i++;
                                        <tr>
                                            <td class="align-middle text-center" style="cursor:text">@(a + i)</td>
                                            <td class="align-middle">@user.FirstName</td>
                                            <td class="align-middle">@user.LastName</td>
                                            <td class="align-middle">@user.EmailID</td>
                                            <td class="align-middle">@user.JoinDate.Value.ToString("dd-MM-yyyy,hh:mm")</td>
                                            <td class="align-middle text-center getpurple">@user.UnderReviewNotes</td>
                                            <td class="align-middle text-center getpurple">@user.PublishedNotes</td>
                                            <td class="align-middle text-center getpurple">@user.DownloadNotes</td>
                                            <td class="align-middle text-center getpurple">$@user.TotalExpenses</td>
                                            <td class="align-middle text-center">$@user.TotalEarnings</td>
                                            <td class="align-middle">
                                                <div class="dropdown" style="cursor:pointer">
                                                    <a id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                        <i class="fa fa-ellipsis-v dowhite"></i>
                                                    </a>
                                                    <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuLink">
                                                        <a class="dropdown-item" href="@Url.Action("MemberDetail","Admin",new { UserId = user.MemberID.ToString() } )">View More Details</a>
                                                        <a class="dropdown-item" href="@Url.Action("Member","Admin",new { EmailID = user.EmailID.ToString(), Password = user.Password.ToString(), sortBy = Request.QueryString["sortBy"], search = Request.QueryString["search"], page = Request.QueryString["page"] } )">Deactivate </a>
                                                    </div>
                                                </div>
                                            </td>
                                            <td></td>

                                        </tr>
                                    }
                                }

                            </tbody>
                        </table>
                    </div>
                </div>


            </div>
        </div>
    </section>
    <!-- Member ends -->
    @Html.PagedListPager(Model, page => Url.Action("Member", new { page, sortBy = Request.QueryString["sortBy"], search = Request.QueryString["search"] }), new PagedListRenderOptions()
{
       Display = PagedListDisplayMode.IfNeeded,
       ContainerDivClasses = null,
       LiElementClasses = new string[] { "page-item" },
       UlElementClasses = new string[] { "pagination justify-content-center" },
       LinkToNextPageFormat = "<i class='fa fa-chevron-right'></i>",
       LinkToPreviousPageFormat = "<i class='fa fa-chevron-left'></i>",
       MaximumPageNumbersToDisplay = 5,
       DisplayEllipsesWhenNotShowingAllPageNumbers = false,
       DisplayLinkToFirstPage = PagedListDisplayMode.Never,
       DisplayLinkToLastPage = PagedListDisplayMode.Never
})
