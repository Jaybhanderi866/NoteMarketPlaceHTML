@using PagedList
@using PagedList.Mvc
@using NoteMarketPlace.Models
@model IPagedList<NoteMarketPlace.Models.BuyerRequest>

@{
    ViewBag.Title = "Download Note";
    Layout = "~/Views/Shared/Admin.cshtml";
}

@{
    NoteMarketPlaceEntities db = new NoteMarketPlaceEntities();
}

<!-- Downloaded Notes -->
<section id="dashboard-publish" class="mydownload-margin">
    <div class="container">
        <div class="row">
            <div class="col-12 col-sm-12 col-md-12 col-lg-12">
                <h3>Downloaded Notes</h3>
            </div>
        </div>
        <form>
            <div class="row top-table">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-6">
                    <div class="row">
                        <div class="col-4 col-xs-12">
                            <p class="seller-text text-left">Notes</p>
                            <select name="note" class="form-control inputselect" onchange="submit()">
                                <option value="">Select note</option>
                                @foreach (var item in ViewBag.notes)
                                {
                                    if (Request.QueryString["note"] == item)
                                    {
                                        <option selected value="@item">@item</option>
                                        continue;
                                    }
                                    <option value="@item">@item</option>
                                }
                            </select>
                        </div>


                        <div class="col-4 col-xs-12">
                            <p class="seller-text text-left">Seller</p>
                            <select name="seller" class="form-control inputselect seller-dd1" onchange="submit()">
                                @{ List<string> sellers = new List<string>();
                                    foreach (int item in ViewBag.sellers)
                                    {
                                        var user = db.Users.SingleOrDefault(m => m.UserId == item);
                                        sellers.Add(user.FirstName + " " + user.LastName);
                                    }
                                    sellers.Distinct();
                                }
                                <option value="">Select Seller</option>
                                @foreach (var seller in sellers.Distinct())
                                {

                                    if (Request.QueryString["seller"] == seller)
                                    {
                                        <option selected value="@seller">@seller</option>
                                        continue;
                                    }
                                    <option value="@seller">@seller</option>
                                }
                            </select>
                        </div>

                        <div class="col-4 col-xs-12">
                            <p class="seller-text text-left">Buyer</p>

                            <select name="buyer" class="form-control inputselect seller-dd1" onchange="submit()">
                                @{  List<string> buyers = new List<string>();
                                    foreach (int item in ViewBag.buyers)
                                    {
                                        var user = db.Users.SingleOrDefault(m => m.UserId == item);
                                        buyers.Add(user.FirstName + " " + user.LastName);
                                    }
                                    buyers.Distinct();
                                }
                                <option value="">Select Buyer</option>
                                @foreach (var buyer  in buyers.Distinct())
                                {
                                    
                                    if (Request.QueryString["buyer"] == buyer)
                                    {
                                        <option selected value="@buyer">@buyer</option>
                                        continue;
                                    }
                                    <option value="@buyer">@buyer</option>
                                }
                            </select>
                        </div>
                    </div>
                </div>
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-6">
                    <div class="row justify-content-end">
                        <div class="wrapper seller-mb">
                            <img src="/Content/Admin/img/Dashboard/search.jpg" class="searchimage doup">
                            <input type="text" name="search" value="@Request.QueryString["search"]" class="form-control search-bar InputEmail1" placeholder="Search">
                        </div>
                        <div class="btn-merge seller-mb">
                            <button type="submit" class="btn text-uppercase text-center" id="mybtn"><b>Search</b></button>
                        </div>
                    </div>
                </div>
            </div>
        </form>
        <div class="row">
            <div class="col-md-12">
                <div class="grid-table table-responsive-xl">
                    <table class="table">
                        <thead>
                            <tr>
                                <th scope="col" class="align-middle text-center" style="cursor:text">SR NO.</th>
                                <th scope="col" class="align-middle" onclick="@("window.location.href='" + @Url.Action("DownloadNote", "Admin", new { sortBy = "title", note = Request.QueryString["note"], seller = Request.QueryString["seller"], buyer = Request.QueryString["buyer"], search = Request.QueryString["search"], page = Request.QueryString["page"] }) + "'");">NOTE TITLE</th>
                                <th scope="col" class="align-middle" onclick="@("window.location.href='" + @Url.Action("DownloadNote", "Admin", new { sortBy = "category", note = Request.QueryString["note"], seller = Request.QueryString["seller"], buyer = Request.QueryString["buyer"], search = Request.QueryString["search"], page = Request.QueryString["page"] }) + "'");">CATEGORY</th>
                                <th scope="col" class="align-middle" onclick="@("window.location.href='" + @Url.Action("DownloadNote", "Admin", new { sortBy = "buyer", note = Request.QueryString["note"], seller = Request.QueryString["seller"], buyer = Request.QueryString["buyer"], search = Request.QueryString["search"], page = Request.QueryString["page"] }) + "'");">BUYER</th>
                                <th scope="col" class="align-middle" style="cursor:text"></th>
                                <th scope="col" class="align-middle" onclick="@("window.location.href='" + @Url.Action("DownloadNote", "Admin", new { sortBy = "seller", note = Request.QueryString["note"], seller = Request.QueryString["seller"], buyer = Request.QueryString["buyer"], search = Request.QueryString["search"], page = Request.QueryString["page"] }) + "'");">SELLER</th>
                                <th scope="col" class="align-middle" style="cursor:text"></th>
                                <th scope="col" class="align-middle" style="cursor:text">SELL TYPE</th>
                                <th scope="col" class="align-middle" onclick="@("window.location.href='" + @Url.Action("DownloadNote", "Admin", new { sortBy = "price", note = Request.QueryString["note"], seller = Request.QueryString["seller"], buyer = Request.QueryString["buyer"], search = Request.QueryString["search"], page = Request.QueryString["page"] }) + "'");">PRICE</th>
                                <th scope="col" class="align-middle text-center" onclick="@("window.location.href='" + @Url.Action("DownloadNote", "Admin", new { sortBy = "date", note = Request.QueryString["note"], seller = Request.QueryString["seller"], buyer = Request.QueryString["buyer"], search = Request.QueryString["search"], page = Request.QueryString["page"] }) + "'");">DOWNLOADED DATE/TIME</th>
                                <th scope="col" class="align-middle" style="cursor:text"></th>
                                <th scope="col" class="align-middle" style="cursor:text"></th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.Count == 0)
                            {
                                <tr><td colspan="12" class="align-middle">No Record Found!</td></tr>
                            }
                            @{
                                int i = -1, a;
                                if (Request.QueryString["page"] == null || Request.QueryString["page"].AsInt() == 1)
                                {
                                    a = 1;
                                }
                                else
                                {
                                    a = (Request.QueryString["page"].AsInt() - 1) * 5 + 1;
                                }
                                foreach (var item in Model)
                                {
                                    i++;
                                    <tr>
                                        <td class="align-middle text-center">@(a + i)</td>
                                        <td class="align-middle getpurple">@item.NoteTitle</td>
                                        <td class="align-middle">@item.NoteDetail.NoteCategory.Name</td>
                                        <td class="align-middle">@(item.User.FirstName + " " + item.User.LastName)</td>
                                        <td class="align-middle"><a href="@Url.Action("MemberDetail","Admin",new { UserId = item.BuyerID.ToString() } )"><img src="/Content/img/Dashboard/eye.png"></a></td>                                        
                                        <td class="align-middle">@(item.User1.FirstName + " " + item.User1.LastName)</td>
                                        <td class="align-middle"><a href="@Url.Action("MemberDetail","Admin",new { UserId = item.SellerID.ToString() } )"><img src="/Content/img/Dashboard/eye.png"></a></td>                                        
                                        <td class="align-middle">@item.SellType</td>
                                        <td class="align-middle">$@item.Price</td>
                                        <td class="align-middle">@item.ApprovedDate.Value.ToString("dd-MM-yyyy,hh:mm")</td>
                                        <td class="align-middle marright">
                                            <div class="dropdown" style="cursor:pointer">
                                                <a id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                    <i class="fa fa-ellipsis-v dowhite"></i>
                                                </a>
                                                <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuLink">
                                                    @{ NoteAttachement notefile = db.NoteAttachements.SingleOrDefault(m => m.NoteID == item.NoteID); }
                                                    <a class="dropdown-item" href="@Url.Action("DownloadFile","Home",new { filename = notefile.FileName } )">Download Notes</a>
                                                    <a class="dropdown-item" href="@Url.Action("NoteDetail", "Admin", new { noteId = item.NoteID.ToString() })">View More Details</a>
                                                </div>
                                            </div>
                                        </td>
                                        <td></td>
                                    </tr>
                                }
                            }

                        </tbody>
                    </table>
                </div>
            </div>


        </div>
    </div>
</section>
<!-- Downloaded Notes ENds -->
<!-- Pagination -->
@Html.PagedListPager(Model, page => Url.Action("DownloadNote", new { page, note = Request.QueryString["note"], seller = Request.QueryString["seller"], buyer = Request.QueryString["buyer"], sortBy = Request.QueryString["sortBy"], search = Request.QueryString["search"] }), new PagedListRenderOptions()
{
       Display = PagedListDisplayMode.IfNeeded,
       ContainerDivClasses = null,
       LiElementClasses = new string[] { "page-item" },
       UlElementClasses = new string[] { "pagination justify-content-center" },
       LinkToNextPageFormat = "<i class='fa fa-chevron-right'></i>",
       LinkToPreviousPageFormat = "<i class='fa fa-chevron-left'></i>",
       MaximumPageNumbersToDisplay = 5,
       DisplayEllipsesWhenNotShowingAllPageNumbers = false,
       DisplayLinkToFirstPage = PagedListDisplayMode.Never,
       DisplayLinkToLastPage = PagedListDisplayMode.Never
})